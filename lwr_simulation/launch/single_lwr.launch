<launch>
	<!-- LAUNCH INTERFACE -->
	
	<!-- in case you have different robot configurations -->
	<arg name="robot_name" default="lwr_robot"/>

	<!-- the default is the simulator -->
	<arg name="use_lwr_sim" default="true"/>

	<!-- set some ros tools -->
	<arg name="use_rviz" default="true"/>
	<arg name="gui" default="true" />

	<!-- set joint limits -->
	<arg name="t1_limits" default="false"/>


	<!-- the urdf/sdf parameter -->
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find lwr_simulation)/model/$(arg robot_name).urdf.xacro"/>


	<!-- joint and robot state publishers of the full robot description -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<rosparam param="source_list">[/lwr/joint_states]</rosparam>
	</node>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

	<!-- robot visulization uses the robot model and tf -->
	<group if="$(arg use_rviz)">
		<node name="lwr_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find lwr_simulation)/launch/rviz_config.rviz" output="screen"/>
	</group>

	<!-- robot simulation uses the full robot description -->
	<group if="$(arg use_lwr_sim)">
		<!-- spawn the robot in gazebo -->
		<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name)"  respawn="false" output="screen" />

		<!-- enable/disable gui at will, the rviz listens to the simulation -->
		<include file="$(find gazebo_ros)/launch/empty_world.launch">
			<arg name="world_name" value="$(find lwr_simulation)/worlds/simple_environment.world"/>
			<arg name="paused" value="false"/>
			<arg name="use_sim_time" value="true"/>
			<arg name="gui" value="false"/>
			<arg name="headless" value="false"/>
			<arg name="debug" value="false"/>

		</include>
	</group>

	<!-- Load updated joint limits (override information from single_lwr_moveit) to respect T1 mode limits -->
	<group if="$(arg t1_limits)" ns="robot_description_planning">
		<rosparam command="load" file="$(find lwr_simulation)/config/t1_joint_limits.yaml"/>
	</group>

	<!-- load robotHW configurations to rosparam server -->
	<rosparam command="load" file="$(find lwr_simulation)/config/hw_interface.yaml"/>

	<!-- load all controller configurations to rosparam server -->
	<!--rosparam file="$(find single_lwr_robot)/config/controllers.yaml" command="load"/-->

</launch>
